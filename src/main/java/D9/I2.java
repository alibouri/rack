package d9;

import com.apollographql.apollo.api.CompiledArgumentDefinition.Builder;
import com.apollographql.apollo.api.CompiledArgumentDefinition;
import com.apollographql.apollo.api.ObjectType;
import com.apollographql.apollo.api.b;

public abstract class i2 {
    public static final CompiledArgumentDefinition A;
    public static final CompiledArgumentDefinition A0;
    public static final CompiledArgumentDefinition A1;
    public static final CompiledArgumentDefinition B;
    public static final CompiledArgumentDefinition B0;
    public static final CompiledArgumentDefinition B1;
    public static final CompiledArgumentDefinition C;
    public static final CompiledArgumentDefinition C0;
    public static final CompiledArgumentDefinition C1;
    public static final CompiledArgumentDefinition D;
    public static final CompiledArgumentDefinition D0;
    public static final CompiledArgumentDefinition D1;
    public static final CompiledArgumentDefinition E;
    public static final CompiledArgumentDefinition E0;
    public static final CompiledArgumentDefinition E1;
    public static final CompiledArgumentDefinition F;
    public static final CompiledArgumentDefinition F0;
    public static final CompiledArgumentDefinition F1;
    public static final CompiledArgumentDefinition G;
    public static final CompiledArgumentDefinition G0;
    public static final CompiledArgumentDefinition G1;
    public static final CompiledArgumentDefinition H;
    public static final CompiledArgumentDefinition H0;
    public static final CompiledArgumentDefinition H1;
    public static final CompiledArgumentDefinition I;
    public static final CompiledArgumentDefinition I0;
    public static final CompiledArgumentDefinition I1;
    public static final CompiledArgumentDefinition J;
    public static final CompiledArgumentDefinition J0;
    public static final CompiledArgumentDefinition J1;
    public static final CompiledArgumentDefinition K;
    public static final CompiledArgumentDefinition K0;
    public static final CompiledArgumentDefinition K1;
    public static final CompiledArgumentDefinition L;
    public static final CompiledArgumentDefinition L0;
    public static final CompiledArgumentDefinition L1;
    public static final CompiledArgumentDefinition M;
    public static final CompiledArgumentDefinition M0;
    public static final CompiledArgumentDefinition M1;
    public static final CompiledArgumentDefinition N;
    public static final CompiledArgumentDefinition N0;
    public static final CompiledArgumentDefinition N1;
    public static final CompiledArgumentDefinition O;
    public static final CompiledArgumentDefinition O0;
    public static final CompiledArgumentDefinition O1;
    public static final CompiledArgumentDefinition P;
    public static final CompiledArgumentDefinition P0;
    public static final CompiledArgumentDefinition P1;
    public static final CompiledArgumentDefinition Q;
    public static final CompiledArgumentDefinition Q0;
    public static final CompiledArgumentDefinition Q1;
    public static final CompiledArgumentDefinition R;
    public static final CompiledArgumentDefinition R0;
    public static final CompiledArgumentDefinition R1;
    public static final CompiledArgumentDefinition S;
    public static final CompiledArgumentDefinition S0;
    public static final CompiledArgumentDefinition S1;
    public static final CompiledArgumentDefinition T;
    public static final CompiledArgumentDefinition T0;
    public static final CompiledArgumentDefinition T1;
    public static final CompiledArgumentDefinition U;
    public static final CompiledArgumentDefinition U0;
    public static final CompiledArgumentDefinition U1;
    public static final CompiledArgumentDefinition V;
    public static final CompiledArgumentDefinition V0;
    public static final CompiledArgumentDefinition V1;
    public static final CompiledArgumentDefinition W;
    public static final CompiledArgumentDefinition W0;
    public static final CompiledArgumentDefinition W1;
    public static final CompiledArgumentDefinition X;
    public static final CompiledArgumentDefinition X0;
    public static final CompiledArgumentDefinition X1;
    public static final CompiledArgumentDefinition Y;
    public static final CompiledArgumentDefinition Y0;
    public static final CompiledArgumentDefinition Y1;
    public static final CompiledArgumentDefinition Z;
    public static final CompiledArgumentDefinition Z0;
    public static final CompiledArgumentDefinition Z1;
    public static final CompiledArgumentDefinition a;
    public static final CompiledArgumentDefinition a0;
    public static final CompiledArgumentDefinition a1;
    public static final CompiledArgumentDefinition a2;
    public static final CompiledArgumentDefinition b;
    public static final CompiledArgumentDefinition b0;
    public static final CompiledArgumentDefinition b1;
    public static final CompiledArgumentDefinition b2;
    public static final CompiledArgumentDefinition c;
    public static final CompiledArgumentDefinition c0;
    public static final CompiledArgumentDefinition c1;
    public static final CompiledArgumentDefinition c2;
    public static final CompiledArgumentDefinition d;
    public static final CompiledArgumentDefinition d0;
    public static final CompiledArgumentDefinition d1;
    public static final CompiledArgumentDefinition d2;
    public static final CompiledArgumentDefinition e;
    public static final CompiledArgumentDefinition e0;
    public static final CompiledArgumentDefinition e1;
    public static final CompiledArgumentDefinition e2;
    public static final CompiledArgumentDefinition f;
    public static final CompiledArgumentDefinition f0;
    public static final CompiledArgumentDefinition f1;
    public static final CompiledArgumentDefinition f2;
    public static final CompiledArgumentDefinition g;
    public static final CompiledArgumentDefinition g0;
    public static final CompiledArgumentDefinition g1;
    public static final CompiledArgumentDefinition g2;
    public static final CompiledArgumentDefinition h;
    public static final CompiledArgumentDefinition h0;
    public static final CompiledArgumentDefinition h1;
    public static final CompiledArgumentDefinition h2;
    public static final CompiledArgumentDefinition i;
    public static final CompiledArgumentDefinition i0;
    public static final CompiledArgumentDefinition i1;
    public static final CompiledArgumentDefinition i2;
    public static final CompiledArgumentDefinition j;
    public static final CompiledArgumentDefinition j0;
    public static final CompiledArgumentDefinition j1;
    public static final CompiledArgumentDefinition j2;
    public static final CompiledArgumentDefinition k;
    public static final CompiledArgumentDefinition k0;
    public static final CompiledArgumentDefinition k1;
    public static final CompiledArgumentDefinition k2;
    public static final CompiledArgumentDefinition l;
    public static final CompiledArgumentDefinition l0;
    public static final CompiledArgumentDefinition l1;
    public static final CompiledArgumentDefinition l2;
    public static final CompiledArgumentDefinition m;
    public static final CompiledArgumentDefinition m0;
    public static final CompiledArgumentDefinition m1;
    public static final CompiledArgumentDefinition m2;
    public static final CompiledArgumentDefinition n;
    public static final CompiledArgumentDefinition n0;
    public static final CompiledArgumentDefinition n1;
    public static final CompiledArgumentDefinition n2;
    public static final CompiledArgumentDefinition o;
    public static final CompiledArgumentDefinition o0;
    public static final CompiledArgumentDefinition o1;
    public static final CompiledArgumentDefinition o2;
    public static final CompiledArgumentDefinition p;
    public static final CompiledArgumentDefinition p0;
    public static final CompiledArgumentDefinition p1;
    public static final ObjectType p2;
    public static final CompiledArgumentDefinition q;
    public static final CompiledArgumentDefinition q0;
    public static final CompiledArgumentDefinition q1;
    public static final CompiledArgumentDefinition r;
    public static final CompiledArgumentDefinition r0;
    public static final CompiledArgumentDefinition r1;
    public static final CompiledArgumentDefinition s;
    public static final CompiledArgumentDefinition s0;
    public static final CompiledArgumentDefinition s1;
    public static final CompiledArgumentDefinition t;
    public static final CompiledArgumentDefinition t0;
    public static final CompiledArgumentDefinition t1;
    public static final CompiledArgumentDefinition u;
    public static final CompiledArgumentDefinition u0;
    public static final CompiledArgumentDefinition u1;
    public static final CompiledArgumentDefinition v;
    public static final CompiledArgumentDefinition v0;
    public static final CompiledArgumentDefinition v1;
    public static final CompiledArgumentDefinition w;
    public static final CompiledArgumentDefinition w0;
    public static final CompiledArgumentDefinition w1;
    public static final CompiledArgumentDefinition x;
    public static final CompiledArgumentDefinition x0;
    public static final CompiledArgumentDefinition x1;
    public static final CompiledArgumentDefinition y;
    public static final CompiledArgumentDefinition y0;
    public static final CompiledArgumentDefinition y1;
    public static final CompiledArgumentDefinition z;
    public static final CompiledArgumentDefinition z0;
    public static final CompiledArgumentDefinition z1;

    static {
        i2.a = b.k("amount");
        i2.b = b.k("savingsWalletId");
        i2.c = b.k("userInterface");
        i2.d = b.k("savingsWalletId");
        i2.e = b.k("whenShouldUnlock");
        new Builder("deviceInfo").build();
        new Builder("mobile").build();
        new Builder("pin").build();
        i2.f = new Builder("deviceInfo").build();
        i2.g = b.k("mobile");
        i2.h = b.k("name");
        i2.i = b.k("pin");
        i2.j = b.k("qrText");
        i2.k = b.k("userInterface");
        new Builder("contactListFingerprint").build();
        new Builder("deviceInfo").build();
        new Builder("mobile").build();
        new Builder("pin").build();
        new Builder("requiredPermissions").build();
        i2.l = b.k("autofilled");
        i2.m = b.k("code");
        i2.n = b.k("contactListFingerprint");
        i2.o = b.k("insecureCurrentlyLoggedInUserMobiles");
        i2.p = b.k("insecureCurrentlyLoggedInUserSessionIds");
        i2.q = b.k("name");
        i2.r = b.k("partnerOrg");
        i2.s = b.k("pin");
        i2.t = b.k("qrText");
        i2.u = b.k("tokenId");
        new Builder("autofilled").build();
        new Builder("code").build();
        new Builder("pin").build();
        new Builder("tokenId").build();
        new Builder("serializedForm").build();
        new Builder("tokenId").build();
        i2.v = new Builder("autofilled").build();
        i2.w = b.k("code");
        i2.x = b.k("contactListFingerprint");
        i2.y = b.k("tokenId");
        new Builder("category").build();
        new Builder("code").build();
        new Builder("description").build();
        new Builder("locationType").build();
        new Builder("name").build();
        new Builder("partnerOrg").build();
        new Builder("tokenId").build();
        i2.z = new Builder("agentPin").build();
        i2.A = b.k("answers");
        i2.B = b.k("securityQuestionFormId");
        i2.C = b.k("formContent");
        i2.D = b.k("formPurpose");
        i2.E = b.k("tokenId");
        i2.F = b.k("smsTokenId");
        new Builder("contactListFingerprint").build();
        new Builder("deviceInfo").build();
        new Builder("mobile").build();
        new Builder("newPin").build();
        new Builder("otp").build();
        i2.G = b.k("deviceInfo");
        i2.H = b.k("mobile");
        i2.I = b.k("newPin");
        i2.J = b.k("autofilled");
        i2.K = b.k("code");
        i2.L = b.k("tokenId");
        i2.M = b.k("autofilled");
        i2.N = b.k("code");
        i2.O = b.k("contactListFingerprint");
        i2.P = b.k("tokenId");
        i2.Q = b.k("bizRegistrationId");
        i2.R = b.k("fields");
        i2.S = b.k("isBlurry");
        i2.T = b.k("length");
        i2.U = b.k("mimetype");
        i2.V = b.k("photoSetId");
        i2.W = b.k("sha256");
        i2.X = b.k("source");
        i2.Y = b.k("type");
        i2.Z = b.k("uploadProtocol");
        i2.a0 = b.k("version");
        i2.b0 = b.k("walletId");
        i2.c0 = b.k("insecureCurrentlyLoggedInUserMobiles");
        i2.d0 = b.k("insecureCurrentlyLoggedInUserSessionIds");
        i2.e0 = b.k("acceptedPartnerOrg");
        i2.f0 = b.k("contactListFingerprint");
        i2.g0 = b.k("overdraftUsageInput");
        i2.h0 = b.k("pin");
        i2.i0 = b.k("possiblyMistakenTransferConfirmed");
        i2.j0 = b.k("transfer");
        i2.k0 = b.k("transferId");
        new Builder("agentTransaction").build();
        new Builder("pin").build();
        new Builder("agentTransaction").build();
        i2.l0 = new Builder("clientInfo").build();
        i2.m0 = b.k("isNewPartnerOrg");
        i2.n0 = b.k("partnerOrg");
        i2.o0 = b.k("version");
        i2.p0 = b.k("walletId");
        i2.q0 = b.k("actionSource");
        i2.r0 = b.k("billAmount");
        i2.s0 = b.k("clientId");
        i2.t0 = b.k("contactListFingerprint");
        i2.u0 = b.k("fields");
        i2.v0 = b.k("id");
        i2.w0 = b.k("selectedInvoicesInfo");
        i2.x0 = b.k("sendAmount");
        i2.y0 = b.k("input");
        i2.z0 = b.k("billFavoriteOpaqueId");
        i2.A0 = b.k("name");
        i2.B0 = b.k("input");
        i2.C0 = b.k("accountFields");
        i2.D0 = b.k("accountTypeId");
        i2.E0 = b.k("idempotencyKey");
        i2.F0 = b.k("accountTypeId");
        i2.G0 = b.k("amount");
        i2.H0 = b.k("direction");
        i2.I0 = b.k("expectedFee");
        i2.J0 = b.k("fields");
        i2.K0 = b.k("idempotencyKey");
        i2.L0 = b.k("linkedAccountId");
        i2.M0 = b.k("userInterface");
        i2.N0 = b.k("idempotencyKey");
        i2.O0 = b.k("linkedAccountId");
        i2.P0 = b.k("otp");
        new Builder("walletId").build();
        i2.Q0 = new Builder("pin").build();
        new Builder("amount").build();
        new Builder("failureReason").build();
        new Builder("settlementId").build();
        i2.R0 = new Builder("tokenId").build();
        new Builder("dateOfBirth").build();
        new Builder("ownerName").build();
        new Builder("walletId").build();
        i2.S0 = new Builder("referrerUrl").build();
        i2.T0 = b.k("whenInstallBegan");
        i2.U0 = b.k("whenReferrerClicked");
        new Builder("resolution").build();
        new Builder("userId").build();
        i2.V0 = new Builder("pushNotificationToken").build();
        i2.W0 = b.k("pushNotificationAttemptOpaqueId");
        new Builder("canLogin").build();
        new Builder("mobile").build();
        new Builder("mobile").build();
        i2.X0 = new Builder("announcementId").build();
        i2.Y0 = b.k("eventType");
        i2.Z0 = b.k("events");
        i2.a1 = b.k("termsId");
        i2.b1 = b.k("linkedAccountOpaqueId");
        i2.c1 = b.k("partnerQueryId");
        i2.d1 = b.k("accountInfo");
        i2.e1 = b.k("billTypeId");
        i2.f1 = b.k("partnerQueryId");
        i2.g1 = b.k("accountInfo");
        i2.h1 = b.k("billTypeId");
        i2.i1 = b.k("partnerQueryId");
        new Builder("amount").build();
        new Builder("fileLength").build();
        new Builder("fileSha256").build();
        new Builder("mimetype").build();
        new Builder("publicBankName").build();
        new Builder("source").build();
        i2.j1 = new Builder("expectedFee").build();
        i2.k1 = b.k("idempotencyKey");
        i2.l1 = b.k("expectedFee");
        i2.m1 = b.k("idempotencyKey");
        i2.n1 = b.k("oldPaymentCardId");
        i2.o1 = b.k("encryptedSessionKey");
        i2.p1 = b.k("idempotencyKey");
        i2.q1 = b.k("paymentCardId");
        i2.r1 = b.k("idempotencyKey");
        i2.s1 = b.k("paymentCardId");
        i2.t1 = b.k("idempotencyKey");
        i2.u1 = b.k("paymentCardId");
        i2.v1 = b.k("idempotencyKey");
        i2.w1 = b.k("paymentCardId");
        i2.x1 = b.k("amount");
        i2.y1 = b.k("paymentCardWalletId");
        i2.z1 = b.k("metrics");
        i2.A1 = b.k("cancelledTxCount");
        i2.B1 = b.k("committedTxCount");
        i2.C1 = b.k("lastSyncedEntryId");
        i2.D1 = b.k("lastSyncedEntryWhenEntered");
        i2.E1 = b.k("pendingTxCount");
        i2.F1 = b.k("approve");
        i2.G1 = b.k("userDeviceApprovalRequestId");
        i2.H1 = b.k("ostrichEggs");
        new Builder("agent").build();
        new Builder("agentProspectId").build();
        new Builder("agent").build();
        new Builder("agentId").build();
        new Builder("agentProspect").build();
        new Builder("agentProspect").build();
        new Builder("agentProspectId").build();
        new Builder("agentProspectId").build();
        new Builder("agentProspectId").build();
        new Builder("text").build();
        new Builder("merchant").build();
        new Builder("merchant").build();
        new Builder("merchantId").build();
        new Builder("coords").build();
        new Builder("coordsAccuracy").build();
        new Builder("isBadgeScanSkipped").build();
        new Builder("merchantId").build();
        new Builder("coords").build();
        new Builder("coordsAccuracy").build();
        new Builder("merchantId").build();
        new Builder("notesForNextVisit").build();
        new Builder("skipReason").build();
        new Builder("whenNextVisitProposed").build();
        new Builder("visitId").build();
        new Builder("followupComments").build();
        new Builder("merchantUfid").build();
        new Builder("taskId").build();
        new Builder("taskKey").build();
        new Builder("visitId").build();
        new Builder("followupComments").build();
        new Builder("rawResponses").build();
        new Builder("taskId").build();
        new Builder("taskKey").build();
        new Builder("visitId").build();
        new Builder("followupComments").build();
        new Builder("merchantUfid").build();
        new Builder("taskId").build();
        new Builder("taskKey").build();
        new Builder("visitId").build();
        new Builder("filename").build();
        new Builder("merchantId").build();
        new Builder("mimetype").build();
        new Builder("sha256").build();
        new Builder("merchantId").build();
        new Builder("merchantId").build();
        new Builder("otp").build();
        new Builder("merchantId").build();
        new Builder("atxId").build();
        new Builder("noteText").build();
        new Builder("agentId").build();
        new Builder("checkinId").build();
        new Builder("coords").build();
        new Builder("agentId").build();
        new Builder("agentPhoneNumber").build();
        new Builder("staffPhoneNumber").build();
        new Builder("agentId").build();
        new Builder("coords").build();
        new Builder("skipReason").build();
        new Builder("notes").build();
        new Builder("visitId").build();
        new Builder("coords").build();
        new Builder("taskId").build();
        new Builder("visitId").build();
        new Builder("coords").build();
        new Builder("outcome").build();
        new Builder("taskId").build();
        new Builder("visitId").build();
        new Builder("answer").build();
        new Builder("coords").build();
        new Builder("taskId").build();
        new Builder("visitId").build();
        new Builder("coords").build();
        new Builder("skipReason").build();
        new Builder("taskId").build();
        new Builder("coords").build();
        new Builder("description").build();
        new Builder("outcome").build();
        new Builder("status").build();
        new Builder("visitId").build();
        new Builder("qrText").build();
        new Builder("mobile").build();
        new Builder("name").build();
        new Builder("nfcAuthinfo").build();
        new Builder("pin").build();
        new Builder("qrText").build();
        new Builder("userInterface").build();
        new Builder("agentTransaction").build();
        new Builder("agentTransaction").build();
        new Builder("code").build();
        new Builder("code").build();
        new Builder("collectedKycInfo").build();
        new Builder("agentNfc").build();
        new Builder("agentPin").build();
        new Builder("coords").build();
        new Builder("id").build();
        new Builder("id").build();
        new Builder("announcementId").build();
        new Builder("deviceInfo").build();
        new Builder("eventType").build();
        i2.I1 = new Builder("autofilled").build();
        i2.J1 = b.k("magicLinkSecret");
        i2.K1 = b.k("referrer");
        i2.L1 = b.k("autofilled");
        i2.M1 = b.k("magicLinkSecret");
        i2.N1 = b.k("referrer");
        i2.O1 = b.k("smsTokenId");
        i2.P1 = b.k("deviceInfo");
        i2.Q1 = b.k("pin");
        i2.R1 = b.k("previousPin");
        new Builder("agentTransaction").build();
        new Builder("agentUserId").build();
        new Builder("agentTransaction").build();
        new Builder("agentUserId").build();
        new Builder("mobile").build();
        new Builder("agentId").build();
        new Builder("description").build();
        new Builder("issueType").build();
        new Builder("deviceId").build();
        b.k("status");
        i2.S1 = b.k("deviceId");
        i2.T1 = b.k("idempotencyKey");
        i2.U1 = b.k("insecureCurrentlyLoggedInUserMobiles");
        i2.V1 = b.k("insecureCurrentlyLoggedInUserSessionIds");
        new Builder("mobile").build();
        new Builder("code").build();
        new Builder("tokenId").build();
        new Builder("merchantId").build();
        new Builder("merchantQrUrl").build();
        new Builder("merchantUId").build();
        new Builder("merchantId").build();
        new Builder("merchantQrUrl").build();
        new Builder("merchantUId").build();
        i2.W1 = new Builder("qrValue").build();
        new Builder("amount").build();
        new Builder("capture").build();
        new Builder("clientId").build();
        new Builder("coords").build();
        new Builder("supportsVerification").build();
        new Builder("url").build();
        new Builder("authCode").build();
        new Builder("tokenId").build();
        new Builder("amount").build();
        new Builder("fields").build();
        new Builder("idempotencyKey").build();
        new Builder("userInterface").build();
        new Builder("walletId").build();
        new Builder("claimerId").build();
        new Builder("fields").build();
        new Builder("idempotencyKey").build();
        new Builder("userInterface").build();
        new Builder("walletId").build();
        i2.X1 = new Builder("actionSource").build();
        i2.Y1 = b.k("actionUrl");
        i2.Z1 = b.k("amount");
        i2.a2 = b.k("fields");
        i2.b2 = b.k("idempotencyKey");
        i2.c2 = b.k("merchantId");
        i2.d2 = b.k("userInterface");
        new Builder("refundPin").build();
        new Builder("transferId").build();
        new Builder("transfer").build();
        new Builder("destMerchantUId").build();
        new Builder("transferId").build();
        new Builder("claimerId").build();
        new Builder("transferId").build();
        new Builder("deviceInfo").build();
        new Builder("qrCode").build();
        new Builder("deviceInfo").build();
        new Builder("employeeIdNumber").build();
        new Builder("pin").build();
        new Builder("walletId").build();
        new Builder("actionSource").build();
        new Builder("actionUrl").build();
        new Builder("amount").build();
        new Builder("idempotencyKey").build();
        new Builder("recipientId").build();
        i2.e2 = b.k("amount");
        i2.f2 = b.k("checkoutSessionId");
        i2.g2 = b.k("linkSource");
        i2.h2 = b.k("merchantName");
        i2.i2 = b.k("userInterface");
        i2.j2 = b.k("waveLaunchUrl");
        i2.k2 = b.k("acceptedScratchCardTermsVersion");
        i2.l2 = b.k("scratchCardId");
        i2.m2 = b.k("promoCode");
        new Builder("coords").build();
        new Builder("deviceInfo").build();
        new Builder("qrText").build();
        new Builder("deviceInfo").build();
        new Builder("qrText").build();
        new Builder("actionSource").build();
        new Builder("location").build();
        new Builder("merchantId").build();
        i2.n2 = new Builder("id").build();
        i2.o2 = b.k("version");
        new Builder("code").build();
        new Builder("name").build();
        new Builder("pin").build();
        new Builder("tokenId").build();
        i2.p2 = new com.apollographql.apollo.api.ObjectType.Builder("Mutation").build();
    }
}

